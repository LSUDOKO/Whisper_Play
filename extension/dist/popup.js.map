{"version":3,"file":"popup.js","mappings":";;;;AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAM;EAChD,IAAMC,aAAa,GAAGF,QAAQ,CAACG,cAAc,CAAC,eAAe,CAAC;EAC9D,IAAMC,eAAe,GAAGJ,QAAQ,CAACG,cAAc,CAAC,kBAAkB,CAAC;EACnE,IAAME,UAAU,GAAGL,QAAQ,CAACG,cAAc,CAAC,YAAY,CAAC;EACxD,IAAMG,cAAc,GAAGN,QAAQ,CAACG,cAAc,CAAC,gBAAgB,CAAC;EAChE,IAAMI,YAAY,GAAGP,QAAQ,CAACG,cAAc,CAAC,cAAc,CAAC;EAC5D,IAAMK,WAAW,GAAGR,QAAQ,CAACG,cAAc,CAAC,aAAa,CAAC;;EAE1D;EACAM,MAAM,CAACC,OAAO,CAACC,WAAW,CAAC;IAAEC,IAAI,EAAE;EAAW,CAAC,EAAE,UAACC,QAAQ,EAAK;IAC3D,IAAIA,QAAQ,CAACC,SAAS,EAAE;MACpBC,sBAAsB,CAAC,IAAI,CAAC;IAChC;IACAT,cAAc,CAACU,KAAK,GAAGH,QAAQ,CAACI,QAAQ,IAAI,IAAI;IAChDV,YAAY,CAACS,KAAK,GAAGH,QAAQ,CAACK,MAAM,IAAI,GAAG;IAC3CV,WAAW,CAACW,WAAW,MAAAC,MAAA,CAAMb,YAAY,CAACS,KAAK,MAAG;EACtD,CAAC,CAAC;;EAEF;EACAd,aAAa,CAACD,gBAAgB,CAAC,OAAO,EAAE,YAAM;IAC1C,IAAIC,aAAa,CAACiB,WAAW,KAAK,SAAS,EAAE;MACzCV,MAAM,CAACC,OAAO,CAACC,WAAW,CAAC;QAAEC,IAAI,EAAE;MAAU,CAAC,EAAE,UAACC,QAAQ,EAAK;QAC1D,IAAIA,QAAQ,CAACQ,OAAO,EAAE;UAClBN,sBAAsB,CAAC,IAAI,CAAC;QAChC;MACJ,CAAC,CAAC;IACN,CAAC,MAAM;MACHN,MAAM,CAACC,OAAO,CAACC,WAAW,CAAC;QAAEC,IAAI,EAAE;MAAa,CAAC,EAAE,UAACC,QAAQ,EAAK;QAC7D,IAAIA,QAAQ,CAACQ,OAAO,EAAE;UAClBN,sBAAsB,CAAC,KAAK,CAAC;QACjC;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,CAAC;;EAEF;EACAT,cAAc,CAACL,gBAAgB,CAAC,QAAQ,EAAE,YAAM;IAC5CQ,MAAM,CAACC,OAAO,CAACC,WAAW,CAAC;MACvBC,IAAI,EAAE,aAAa;MACnBK,QAAQ,EAAEX,cAAc,CAACU;IAC7B,CAAC,CAAC;EACN,CAAC,CAAC;;EAEF;EACAT,YAAY,CAACN,gBAAgB,CAAC,OAAO,EAAE,YAAM;IACzCO,WAAW,CAACW,WAAW,MAAAC,MAAA,CAAMb,YAAY,CAACS,KAAK,MAAG;IAClDP,MAAM,CAACC,OAAO,CAACC,WAAW,CAAC;MACvBC,IAAI,EAAE,WAAW;MACjBM,MAAM,EAAEI,QAAQ,CAACf,YAAY,CAACS,KAAK;IACvC,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,SAASD,sBAAsBA,CAACD,SAAS,EAAE;IACvCV,eAAe,CAACmB,SAAS,CAACC,MAAM,CAAC,WAAW,EAAEV,SAAS,CAAC;IACxDT,UAAU,CAACc,WAAW,GAAGL,SAAS,GAAG,WAAW,GAAG,cAAc;IACjEZ,aAAa,CAACiB,WAAW,GAAGL,SAAS,GAAG,YAAY,GAAG,SAAS;EACpE;AACJ,CAAC,CAAC,C","sources":["webpack://whisperplay-extension/./popup.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    const connectButton = document.getElementById('connectButton');\r\n    const statusIndicator = document.getElementById('connectionStatus');\r\n    const statusText = document.getElementById('statusText');\r\n    const languageSelect = document.getElementById('languageSelect');\r\n    const volumeSlider = document.getElementById('volumeSlider');\r\n    const volumeValue = document.getElementById('volumeValue');\r\n\r\n    // Get initial state\r\n    chrome.runtime.sendMessage({ type: 'getState' }, (response) => {\r\n        if (response.connected) {\r\n            updateConnectionStatus(true);\r\n        }\r\n        languageSelect.value = response.language || 'en';\r\n        volumeSlider.value = response.volume || 100;\r\n        volumeValue.textContent = `${volumeSlider.value}%`;\r\n    });\r\n\r\n    // Connect/Disconnect button\r\n    connectButton.addEventListener('click', () => {\r\n        if (connectButton.textContent === 'Connect') {\r\n            chrome.runtime.sendMessage({ type: 'connect' }, (response) => {\r\n                if (response.success) {\r\n                    updateConnectionStatus(true);\r\n                }\r\n            });\r\n        } else {\r\n            chrome.runtime.sendMessage({ type: 'disconnect' }, (response) => {\r\n                if (response.success) {\r\n                    updateConnectionStatus(false);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    // Language selection\r\n    languageSelect.addEventListener('change', () => {\r\n        chrome.runtime.sendMessage({\r\n            type: 'setLanguage',\r\n            language: languageSelect.value\r\n        });\r\n    });\r\n\r\n    // Volume control\r\n    volumeSlider.addEventListener('input', () => {\r\n        volumeValue.textContent = `${volumeSlider.value}%`;\r\n        chrome.runtime.sendMessage({\r\n            type: 'setVolume',\r\n            volume: parseInt(volumeSlider.value)\r\n        });\r\n    });\r\n\r\n    function updateConnectionStatus(connected) {\r\n        statusIndicator.classList.toggle('connected', connected);\r\n        statusText.textContent = connected ? 'Connected' : 'Disconnected';\r\n        connectButton.textContent = connected ? 'Disconnect' : 'Connect';\r\n    }\r\n});\r\n"],"names":["document","addEventListener","connectButton","getElementById","statusIndicator","statusText","languageSelect","volumeSlider","volumeValue","chrome","runtime","sendMessage","type","response","connected","updateConnectionStatus","value","language","volume","textContent","concat","success","parseInt","classList","toggle"],"sourceRoot":""}